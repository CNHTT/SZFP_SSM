验证数字的正则表达式集
验证数字：^[0-9]*$
验证n位的数字：^\d{n}$
验证至少n位数字：^\d{n,}$
验证m-n位的数字：^\d{m,n}$
验证零和非零开头的数字：^(0|[1-9][0-9]*)$
验证有两位小数的正实数：^[0-9]+(.[0-9]{2})?$
验证有1-3位小数的正实数：^[0-9]+(.[0-9]{1,3})?$
验证非零的正整数：^\+?[1-9][0-9]*$
验证非零的负整数：^\-[1-9][0-9]*$
验证非负整数（正整数 + 0） ^\d+$
验证非正整数（负整数 + 0） ^((-\d+)|(0+))$
验证长度为3的字符：^.{3}$
验证由26个英文字母组成的字符串：^[A-Za-z]+$
验证由26个大写英文字母组成的字符串：^[A-Z]+$
验证由26个小写英文字母组成的字符串：^[a-z]+$
验证由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$
验证由数字、26个英文字母或者下划线组成的字符串：^\w+$
验证用户密码:^[a-zA-Z]\w{5,17}$ 正确格式为：以字母开头，长度在6-18之间，只能包含字符、数字和下划线。
验证是否含有 ^%&',;=?$\" 等字符：[^%&',;=?$\x22]+
验证汉字：^[\u4e00-\u9fa5],{0,}$
验证Email地址：^\w+[-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$
验证InternetURL：^http://([\w-]+\.)+[\w-]+(/[\w-./?%&=]*)?$ ；^[a-zA-z]+://(w+(-w+)*)(.(w+(-w+)*))*(?S*)?$
验证电话号码：^(\d3,4|\d{3,4}-)?\d{7,8}$：--正确格式为：XXXX-XXXXXXX，XXXX-XXXXXXXX，XXX-XXXXXXX，XXX-XXXXXXXX，XXXXXXX，XXXXXXXX。
验证身份证号（15位或18位数字）：^\d{15}|\d{}18$
验证一年的12个月：^(0?[1-9]|1[0-2])$ 正确格式为：“01”-“09”和“1”“12”
验证一个月的31天：^((0?[1-9])|((1|2)[0-9])|30|31)$ 正确格式为：01、09和1、31。
整数：^-?\d+$
非负浮点数（正浮点数 + 0）：^\d+(\.\d+)?$
正浮点数 ^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$
非正浮点数（负浮点数 + 0） ^((-\d+(\.\d+)?)|(0+(\.0+)?))$
负浮点数 ^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$
浮点数 ^(-?\d+)(\.\d+)?$

SELECT  * FROM  user;

create table user
(
  ID int(10) auto_increment,
  USER_NAME varchar(255) not null comment '用户名',
  USER_PWD varchar(255) not null comment '用户密码',
  USER_EMAIL varchar(255) not null comment '用户邮箱',
  CREATE_TIME TIMESTAMP default CURRENT_TIMESTAMP not null comment '注册时间',
  MODIFY_TIME TIMESTAMP  not null comment '注册时间',
  USER_PHONE varchar(255) null comment '昵称',
  IS_DELETE tinyint(1) default '1' not null comment '账户状态',
  constraint id
  unique (ID)
)
  comment '用户信息表'
;




create table operator
(
  ID int(10) auto_increment
    primary key,
  ADMIN_ID int(10) null,
  OPERTOR_NAME varchar(255) not null comment '操作人员名字',
  OPERTOR_EMAIL varchar(255) not null comment '邮件',
  OPERTOR_PHONE varchar(255) not null comment '电话号码',
  OPERTOR_PWD varchar(255) not null comment '密码',
  CREATE_TIME timestamp default CURRENT_TIMESTAMP not null comment '创建时间',
  IS_DELETE tinyint(1) default '1' not null comment '账户状态',
  OPERTOR_NUMBER varchar(255) not null comment '20170201001-001',
  constraint operator_ibfk_1
  foreign key (ADMIN_ID) references szfp.user (ID)
)
  comment '用户信息表'
;

create index ADMIN_ID
  on operator (ADMIN_ID)
;


CREATE  TABLE report_history(
  ID INT(10) AUTO_INCREMENT PRIMARY KEY ,
  ADMIN_ID INT(10),
  OPERTOR_ID  INT(10),
  AWARD_TIME  VARCHAR(255) NOT NULL ,
  CREATE_TIME TIMESTAMP default CURRENT_TIMESTAMP not null comment '购买时间',
  TerminalID  VARCHAR(255) NOT NULL  COMMENT '终端ID',
  TICKET_ID   VARCHAR(255)  NOT NULL  COMMENT '彩票ID(票号)',
  TOTAL       VARCHAR(255)NOT NULL ,
  CONSTRAINT  pk_1 FOREIGN KEY (ADMIN_ID) REFERENCES user(ID),
  CONSTRAINT  pk_2 FOREIGN KEY (OPERTOR_ID) REFERENCES  operator(ID)
)COMMENT  '记录报表';


CREATE  TABLE game_class(
  ID INT(10) AUTO_INCREMENT PRIMARY KEY ,
  GAME_KEY   VARCHAR(255) NOT NULL,
  GAME_VAULE   VARCHAR(255) NOT NULL,
  GAME_VAULE_L   VARCHAR(255) NOT NULL
) COMMENT  '游戏分类';



CREATE  TABLE item_game_class(
  ID INT(10) AUTO_INCREMENT PRIMARY KEY ,
  ADMIN_ID INT(10),
  OPERTOR_ID INT(10),
  REPORT_HISTORY_ID INT(10),
  ITEM_GAME    VARCHAR(255) NOT NULL ,
  SECO_VAULE   VARCHAR(255) DEFAULT '1' NOT NULL ,
  ITEM_GAME_VAULE VARCHAR(255),
  CONSTRAINT  pk_4 FOREIGN KEY (ADMIN_ID) REFERENCES user(ID),
  CONSTRAINT  pk_5 FOREIGN KEY (OPERTOR_ID) REFERENCES  operator(ID),
  CONSTRAINT  pk_6 FOREIGN KEY (REPORT_HISTORY_ID) REFERENCES report_history(ID)
)COMMENT 'item_class'
















